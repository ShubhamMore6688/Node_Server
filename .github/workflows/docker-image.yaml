name: Build and Deploy Node App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest  # Changed from self-hosted Windows to Ubuntu

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Trivy
        run: |
          sudo apt update
          sudo apt install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt update
          sudo apt install -y trivy
        shell: bash

      - name: Run Trivy File System Scan
        run: trivy fs . --exit-code 0 --no-progress --format table | tee trivy-fs-report.txt

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
        shell: bash

      - name: Run Trivy Image Scan
        run: trivy image ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest --exit-code 0 --no-progress --format table | tee trivy-image-report.txt

      - name: Upload Trivy File System Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: trivy-fs-report.txt

      - name: Upload Trivy Image Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image-report.txt

  deploy:
    name: Deploy on Windows Server
    needs: build-and-scan
    runs-on: self-hosted  # Kept Windows self-hosted runner for deployment

    steps:
      - name: Pull Latest Docker Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
        shell: powershell

      - name: Restart Application in node_server
        run: |
          cd C:\Users\shubh\Desktop\Node_Server
          docker-compose down
          docker-compose up -d --remove-orphans
        shell: powershell
